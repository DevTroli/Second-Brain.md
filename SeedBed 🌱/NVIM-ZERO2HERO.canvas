{
	"nodes":[
		{"id":"day9","type":"text","text":"## üå≥ Dia 9: Syntax Highlighting Avan√ßado\n**Treesitter e Parsing Sem√¢ntico**\n- Nvim-treesitter: parsing AST para highlighting preciso\n- Auto-install de parsers para linguagens detectadas\n- Textobjects avan√ßados: functions, classes, blocks\n- Folding inteligente baseado em sintaxe\n- Rainbow brackets e context-aware indentation","x":1510,"y":790,"width":507,"height":301,"color":"#2f855a"},
		{"id":"day0","type":"text","text":"## üéØ Dia 0: Fundamentos e Mindset\n**Prepara√ß√£o Mental e T√©cnica**\n- Filosofia: abandonar IDEs pesadas por velocidade\n- Alpha Dashboard como ritual de foco di√°rio\n- Estrutura ~/.config/nvim/init.lua\n- Primeiros comandos: :help, :q, :w\n- Configura√ß√£o base de keymaps essenciais","x":450,"y":-987,"width":350,"height":377,"color":"#1a202c"},
		{"id":"day2","type":"text","text":"## üîç Dia 2: Busca e Navega√ß√£o Inteligente\n**Telescope + Neo-tree Ecosystem**\n- Telescope: busca fuzzy em arquivos, conte√∫do, s√≠mbolos\n- Neo-tree: file explorer com git status integrado\n- Keymaps: <leader>ff, <leader>fg, <leader>fb, <leader>fh\n- Ripgrep integration para busca ultrarr√°pida\n- Bookmarks e navega√ß√£o por s√≠mbolos LSP","x":450,"y":-265,"width":350,"height":409,"color":"#2b6cb0"},
		{"id":"benefits","type":"text","text":"## üöÄ Resultado Final\n**IDE Superestimada Conquistada**\n- Startup 10x mais r√°pido que VS Code\n- Memory footprint 5x menor\n- Customiza√ß√£o 100% sob controle\n- Workflow keyboard-driven\n- Produtividade maximizada","x":-123,"y":1774,"width":388,"height":273,"color":"#744210"},
		{"id":"skills","type":"text","text":"## üéì Habilidades Desenvolvidas\n**Conhecimento T√©cnico Adquirido**\n- Lua scripting para configura√ß√£o\n- Plugin ecosystem navigation\n- LSP protocol understanding\n- Git workflow optimization\n- Terminal mastery integration","x":1065,"y":1694,"width":445,"height":271,"color":"#744210"},
		{"id":"day10","type":"text","text":"## üèÜ Dia 10: IDE Completa e Otimizada\n**Checklist Final e Pr√≥ximos Passos**\n- Revis√£o completa: 47 plugins funcionais\n- Checklist de funcionalidades: LSP, Git, Terminal, Search\n- Benchmark: startup < 50ms, memory < 100MB\n- Backup configuration: dotfiles repository\n- Plugins avan√ßados: DAP debugging, testing, AI copilot","x":450,"y":1319,"width":524,"height":287,"color":"#553c9a"},
		{"id":"day8","type":"text","text":"## ‚úÖ Dia 8: Qualidade e Formata√ß√£o\n**Linting e Code Standards**\n- None-ls: ponte para ferramentas externas\n- Prettier: JavaScript/TypeScript/JSON/CSS formatting\n- Black: Python formatting com configura√ß√£o\n- ESLint: JavaScript linting com fix autom√°tico\n- Auto-format on save com BufWritePre autocmd","x":356,"y":941,"width":538,"height":291,"color":"#2f855a"},
		{"id":"day3","type":"text","text":"## üìã Dia 3: Gerenciamento de Workspace\n**Buffers, Tabs e Persist√™ncia**\n- Bufferline: visual tabs com indicadores de estado\n- Persistence: sess√µes autom√°ticas por diret√≥rio\n- Scope: isolamento de buffers por tab\n- Keymaps: <leader>bd, gt, gT, <C-h/l> navega√ß√£o\n- Auto-save e recovery de sess√µes perdidas","x":1637,"y":-265,"width":480,"height":308,"color":"#2b6cb0"},
		{"id":"day1","type":"text","text":"## üì¶ Dia 1: Gerenciamento de Plugins\n**Lazy.nvim e Arquitetura Modular**\n- Instala√ß√£o lazy.nvim via bootstrap autom√°tico\n- Estrutura modular: plugins/, config/, keymaps/\n- Plugins iniciais: alpha-nvim, nvim-web-devicons\n- Comandos essenciais: :Lazy, :Lazy sync, :Lazy clean\n- Configura√ß√£o de lazy loading para performance","x":-591,"y":-265,"width":468,"height":336,"color":"#2b6cb0"},
		{"id":"day4","type":"text","text":"## üß† Dia 4: Language Server Protocol\n**Intelig√™ncia de C√≥digo Nativa**\n- Mason: instalador autom√°tico de LSP servers\n- Lspconfig: configura√ß√£o para 50+ linguagens\n- Keymaps fundamentais: gd, gD, K, <leader>ca, <leader>rn\n- Nvim-cmp: autocompletar com snippets LuaSnip\n- Diagn√≥sticos inline e navigation <leader>dn/dp","x":-591,"y":445,"width":468,"height":350,"color":"#c53030"},
		{"id":"day5","type":"text","text":"## üé® Dia 5: Interface Visual Moderna\n**Temas e Elementos Visuais**\n- Catppuccin Mocha: tema consistente e suave\n- Lualine: statusline com git branch, LSP status\n- Ccc.nvim: color picker e preview inline\n- Hlchunk.nvim: indent guides e chunk highlighting\n- Nvim-notify: notifica√ß√µes elegantes e n√£o-intrusivas","x":450,"y":403,"width":524,"height":284,"color":"#c53030"},
		{"id":"day6","type":"text","text":"## üíª Dia 6: Terminal e Controle de Vers√£o\n**Desenvolvimento Integrado**\n- Toggleterm: terminal flutuante com <C-\\>\n- LazyGit: interface visual completa para Git\n- Fugitive: comandos Git nativos (:Git, :Gdiff)\n- Terminal m√∫ltiplo: horizontal, vertical, float\n- Workflow: commit, push, pull sem sair do editor","x":1637,"y":373,"width":480,"height":314,"color":"#c53030"},
		{"id":"day7","type":"text","text":"## üîî Dia 7: Experi√™ncia do Usu√°rio\n**Mensagens e Intera√ß√µes Refinadas**\n- Noice.nvim: cmdline, messages e notifications modernos\n- Nui.nvim: componentes de UI para popups elegantes\n- Which-key: descoberta de comandos com delays\n- Dressing.nvim: inputs e selects nativos melhorados\n- Startup time otimizado com lazy loading inteligente","x":-544,"y":884,"width":468,"height":406,"color":"#2f855a"}
	],
	"edges":[
		{"id":"foundation","fromNode":"day0","fromSide":"left","toNode":"day1","toSide":"right","color":"#2b6cb0","label":"Plugin Foundation"},
		{"id":"navigation","fromNode":"day1","fromSide":"right","toNode":"day2","toSide":"left","color":"#2b6cb0","label":"Search & Navigate"},
		{"id":"workspace","fromNode":"day2","fromSide":"right","toNode":"day3","toSide":"left","color":"#2b6cb0","label":"Workspace Mgmt"},
		{"id":"intelligence","fromNode":"day3","fromSide":"left","toNode":"day4","toSide":"right","color":"#c53030","label":"Code Intelligence"},
		{"id":"visual","fromNode":"day4","fromSide":"right","toNode":"day5","toSide":"left","color":"#c53030","label":"Visual Polish"},
		{"id":"integration","fromNode":"day5","fromSide":"right","toNode":"day6","toSide":"left","color":"#c53030","label":"Dev Integration"},
		{"id":"ux","fromNode":"day6","fromSide":"left","toNode":"day7","toSide":"right","color":"#2f855a","label":"UX Refinement"},
		{"id":"quality","fromNode":"day7","fromSide":"right","toNode":"day8","toSide":"left","color":"#2f855a","label":"Code Quality"},
		{"id":"syntax","fromNode":"day8","fromSide":"right","toNode":"day9","toSide":"left","color":"#2f855a","label":"Advanced Syntax"},
		{"id":"completion","fromNode":"day9","fromSide":"bottom","toNode":"day10","toSide":"top","color":"#553c9a","label":"Final Integration"},
		{"id":"parallel1","fromNode":"day0","fromSide":"bottom","toNode":"day2","toSide":"top","color":"#4a5568","label":"Direct Navigation"},
		{"id":"parallel2","fromNode":"day1","fromSide":"bottom","toNode":"day4","toSide":"top","color":"#4a5568","label":"Plugin to LSP"},
		{"id":"result1","fromNode":"day10","fromSide":"left","toNode":"benefits","toSide":"right","color":"#744210","label":"Performance Gains"},
		{"id":"result2","fromNode":"day10","fromSide":"bottom","toNode":"skills","toSide":"top","color":"#744210","label":"Knowledge Acquired"}
	]
}